name: .NET Core Desktop

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Interest.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Application_Project_Path: Interest\Interest.csproj 
      Application_Publish_Path: Interest\bin\${{ matrix.configuration }}\net5.0-windows\publish
      Test_Project_Path: Interest.Tests\Interest.Tests.csproj                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Clean
      run: dotnet clean $env:Solution_Name --configuration $env:Configuration && dotnet nuget locals all --clear

    - name: Restore
      run: 
        dotnet restore 

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: 
        dotnet test $env:Test_Project_Path

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Publish the application
      run:
        dotnet publish $env:Application_Project_Path -p:PublishProfile=FolderProfile -c $env:Configuration
      # run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      if: ${{ matrix.configuration == 'Release' }}
      uses: actions/upload-artifact@v2
      with:
        name: dotnet publish Package
        path: ${{ env.Application_Publish_Path }}
